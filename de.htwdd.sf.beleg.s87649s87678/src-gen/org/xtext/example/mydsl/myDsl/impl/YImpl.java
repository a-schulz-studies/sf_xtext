/**
 * generated by Xtext 2.33.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.Nutzen;
import org.xtext.example.mydsl.myDsl.Y;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Y</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.YImpl#getS <em>S</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.YImpl#getN <em>N</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.YImpl#getR <em>R</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.YImpl#getZiel <em>Ziel</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.YImpl#getWunsch <em>Wunsch</em>}</li>
 * </ul>
 *
 * @generated
 */
public class YImpl extends MinimalEObjectImpl.Container implements Y
{
  /**
   * The default value of the '{@link #getS() <em>S</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getS()
   * @generated
   * @ordered
   */
  protected static final String S_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getS() <em>S</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getS()
   * @generated
   * @ordered
   */
  protected String s = S_EDEFAULT;

  /**
   * The cached value of the '{@link #getN() <em>N</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getN()
   * @generated
   * @ordered
   */
  protected Nutzen n;

  /**
   * The default value of the '{@link #getR() <em>R</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getR()
   * @generated
   * @ordered
   */
  protected static final String R_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getR() <em>R</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getR()
   * @generated
   * @ordered
   */
  protected String r = R_EDEFAULT;

  /**
   * The default value of the '{@link #getZiel() <em>Ziel</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getZiel()
   * @generated
   * @ordered
   */
  protected static final String ZIEL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getZiel() <em>Ziel</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getZiel()
   * @generated
   * @ordered
   */
  protected String ziel = ZIEL_EDEFAULT;

  /**
   * The default value of the '{@link #getWunsch() <em>Wunsch</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWunsch()
   * @generated
   * @ordered
   */
  protected static final String WUNSCH_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWunsch() <em>Wunsch</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWunsch()
   * @generated
   * @ordered
   */
  protected String wunsch = WUNSCH_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected YImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.Y;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getS()
  {
    return s;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setS(String newS)
  {
    String oldS = s;
    s = newS;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.Y__S, oldS, s));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Nutzen getN()
  {
    return n;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetN(Nutzen newN, NotificationChain msgs)
  {
    Nutzen oldN = n;
    n = newN;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.Y__N, oldN, newN);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setN(Nutzen newN)
  {
    if (newN != n)
    {
      NotificationChain msgs = null;
      if (n != null)
        msgs = ((InternalEObject)n).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.Y__N, null, msgs);
      if (newN != null)
        msgs = ((InternalEObject)newN).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.Y__N, null, msgs);
      msgs = basicSetN(newN, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.Y__N, newN, newN));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getR()
  {
    return r;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setR(String newR)
  {
    String oldR = r;
    r = newR;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.Y__R, oldR, r));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getZiel()
  {
    return ziel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setZiel(String newZiel)
  {
    String oldZiel = ziel;
    ziel = newZiel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.Y__ZIEL, oldZiel, ziel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getWunsch()
  {
    return wunsch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWunsch(String newWunsch)
  {
    String oldWunsch = wunsch;
    wunsch = newWunsch;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.Y__WUNSCH, oldWunsch, wunsch));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.Y__N:
        return basicSetN(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.Y__S:
        return getS();
      case MyDslPackage.Y__N:
        return getN();
      case MyDslPackage.Y__R:
        return getR();
      case MyDslPackage.Y__ZIEL:
        return getZiel();
      case MyDslPackage.Y__WUNSCH:
        return getWunsch();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.Y__S:
        setS((String)newValue);
        return;
      case MyDslPackage.Y__N:
        setN((Nutzen)newValue);
        return;
      case MyDslPackage.Y__R:
        setR((String)newValue);
        return;
      case MyDslPackage.Y__ZIEL:
        setZiel((String)newValue);
        return;
      case MyDslPackage.Y__WUNSCH:
        setWunsch((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.Y__S:
        setS(S_EDEFAULT);
        return;
      case MyDslPackage.Y__N:
        setN((Nutzen)null);
        return;
      case MyDslPackage.Y__R:
        setR(R_EDEFAULT);
        return;
      case MyDslPackage.Y__ZIEL:
        setZiel(ZIEL_EDEFAULT);
        return;
      case MyDslPackage.Y__WUNSCH:
        setWunsch(WUNSCH_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.Y__S:
        return S_EDEFAULT == null ? s != null : !S_EDEFAULT.equals(s);
      case MyDslPackage.Y__N:
        return n != null;
      case MyDslPackage.Y__R:
        return R_EDEFAULT == null ? r != null : !R_EDEFAULT.equals(r);
      case MyDslPackage.Y__ZIEL:
        return ZIEL_EDEFAULT == null ? ziel != null : !ZIEL_EDEFAULT.equals(ziel);
      case MyDslPackage.Y__WUNSCH:
        return WUNSCH_EDEFAULT == null ? wunsch != null : !WUNSCH_EDEFAULT.equals(wunsch);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (s: ");
    result.append(s);
    result.append(", r: ");
    result.append(r);
    result.append(", ziel: ");
    result.append(ziel);
    result.append(", wunsch: ");
    result.append(wunsch);
    result.append(')');
    return result.toString();
  }

} //YImpl
